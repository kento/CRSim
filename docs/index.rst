CRSimドキュメント

目次

`1 概要 <#概要>`__\ `2 <#概要>`__

`2 開発詳細 <#開発詳細>`__\ `2 <#開発詳細>`__

`2.1 simulate_cr 関数 <#simulate_cr-関数>`__\ `2 <#simulate_cr-関数>`__

`2.2 optimize_cr 関数 <#optimize_cr-関数>`__\ `4 <#optimize_cr-関数>`__

概要
====

(ア) simulate_cr 関数：
~~~~~~~~~~~~~~~~~~~~~~~

マルチレベルC/R をシミュレーションし、その結果を出力します。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(イ) optimize_cr 関数：
~~~~~~~~~~~~~~~~~~~~~~~

simulate_cr 関数の efficiency を最大化する、interval、L2_freq を見つけ出し、その時のシミュレーション結果を出力します。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2. .. rubric:: 開発詳細
      :name: 開発詳細

   1. .. rubric:: simulate_cr 関数
         :name: simulate_cr-関数

tuple simulate_cr(interval, L2ckpt_freq, L1ckpt_overhead, L2ckpt_latency, ckptRestartTimes, failRates, N, SN, G, g, alpha, check_interval, n_check_ok, n_failure_max, efficiency_log)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

・引数（入力）
~~~~~~~~~~~~~~

+----------------------+-----------------------------+---------+--------------+
| **引数名**           | **説明**                    | **型**  |              |
+======================+=============================+=========+==============+
| **Interval**         | L1 チェックポイントの間隔   | int     | 必須         |
+----------------------+-----------------------------+---------+--------------+
| **L2ckpt_freq**      | L2 チェックポイントの頻度   | int     | 必須         |
+----------------------+-----------------------------+---------+--------------+
| **L1ckpt_overhead**  | 同期 L1                     | int     | 必須         |
|  | チェックポイントの時間      |         |              |
+----------------------+-----------------------------+---------+--------------+
| **L2ckpt_latency**   | 非同期L2                    | int     | 必須         |
|                      | チェックポイントの時間      |         |              |
+----------------------+-----------------------------+---------+--------------+
| **ckptRestartTimes** | L1,L2                       | List    | 必須         |
|                      | リカバリ                    |         |              |
|                      | に要する時間を格納した長さ  | [i      |              |
|                      | 2 の配列                    | nt,int] |              |
|                      |                             |         |              |
|                      | = [L1 リカバリ時間,L2       |         |              |
|                      | リカバリ時間]               |         |              |
+----------------------+-----------------------------+---------+--------------+
| **failRates**        | L1,L2                       | List    | 必須         |
|                      | リカバリを                  | [float  |              |
|                      | 必要とする障害の単位時間に  | ,float] |              |
|                      | 発生する回数を格納した長さ  |         |              |
|                      | 2 の配列 = [L1 障害回       |         |              |
|                      |                             |         |              |
|                      | 数,L2 障害回数]             |         |              |
+----------------------+-----------------------------+---------+--------------+
| **N**                | 全計算ノード数              | int     | 必須         |
+----------------------+-----------------------------+---------+--------------+
| **SN**               | 予備ノード数                | int     | 必須         |
|                      | ※仕様追加されたパラメータ   |         |              |
+----------------------+-----------------------------+---------+--------------+
| **G**                | L1                          | int     | 必須         |
|                      | チェッ                      |         |              |
|                      | クポイントのグループサイズ  |         |              |
+----------------------+-----------------------------+---------+--------------+
| **g**                | L1                          | int     | 必須         |
|                      | チェックポイントの障害耐性  |         |              |
+----------------------+-----------------------------+---------+--------------+
| **alpha**            | シミュレーション終了とする  | float   | 必須         |
|                      | Efficiency の変化量の閾値   |         |              |
+----------------------+-----------------------------+---------+--------------+
| **check_interval**   | Efficiency                  | int     | 省略可       |
|                      | の変化量チェックの頻度      |         | 、Default=1  |
|                      | ※仕様追加されたパラメータ   |         |              |
+----------------------+-----------------------------+---------+--------------+
| **n_check_ok**       | Efficiency                  | int     | 省略可       |
|                      | の変化量チェ                |         | 、Default=1  |
|                      | ックで終了と判定されるため  |         |              |
|                      | の連続回数                  |         |              |
|                      | ※仕様追加されたパラメータ  |         |              |
+----------------------+-----------------------------+---------+--------------+
| **n_failure_max**    | 最大障害発生回数            | int     | 省略可、De   |
|                      | ※仕様追加されたパラメータ   |         | fault=500000 |
+----------------------+-----------------------------+---------+--------------+
| **efficiency_log**   | Efficiency                  | bool    | 省略可、D    |
|                      | 変化量チェ                  |         | efault=False |
|                      | ックの履歴出力のオン・オフ  |         |              |
|                      |                             |         |              |
|                      | ※仕様追加されたパラメータ  |         |              |
+----------------------+-----------------------------+---------+--------------+

返り値（出力）：tuple 型データ=(X,A,B,C,D,E,F)

+------------+-------------------------------------------+----------------+
| **引数名** | **説明**                                  |    **型**      |
+============+===========================================+================+
| **X**      | Efficiency = A/(B+C+D+F)                  |    float       |
+------------+-------------------------------------------+----------------+
| **A**      | 実質計算時間                              |    float       |
+------------+-------------------------------------------+----------------+
| **B**      | 計算状態に費やした時間                    |    float       |
+------------+-------------------------------------------+----------------+
| **C**      | L1 チェックポイントに費やした時間         |    float       |
+------------+-------------------------------------------+----------------+
| **D**      | L1 リカバリに費やした時間                 |    float       |
+------------+-------------------------------------------+----------------+
| **E**      | L2 チェックポイントに費やした時間         |    float       |
+------------+-------------------------------------------+----------------+
| **F**      | L2 リカバリに費やした時間                 |    float       |
+------------+-------------------------------------------+----------------+

optimize_cr 関数
----------------

tuple optimize_cr (L1ckpt_overhead, L2ckpt_latency, ckptRestartTimes, failRates, N, SN, G, g, alpha, check_interval, n_check_ok, n_failure_max, n_steps, log_interval)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _引数入力-1:

・引数（入力）
~~~~~~~~~~~~~~

+----------------------+-----------------------------+---------+--------------+
| **引数名**           | **説明**                    | **型**  |              |
+======================+=============================+=========+==============+
| **L1ckpt_overhead**  | 同期 L1                     | int     | 必須         |
|                      | チェックポイントの時間      |         |              |
+----------------------+-----------------------------+---------+--------------+
| **L2ckpt_latency**   | 非同期L2                    | int     | 必須         |
|                      | チェックポイントの時間      |         |              |
+----------------------+-----------------------------+---------+--------------+
| **ckptRestartTimes** | L1,L2                       | List    | 必須         |
|                      | リカバリ                    |         |              |
|                      | に要する時間を格納した長さ  | [i      |              |
|                      | 2 の配列                    | nt,int] |              |
|                      |                             |         |              |
|                      | = [L1 リカバリ時間,L2       |         |              |
|                      | リカバリ時間]               |         |              |
+----------------------+-----------------------------+---------+--------------+
| **failRates**        | L1,L2                       | List    | 必須         |
|                      | リカバリを                  | [float  |              |
|                      | 必要とする障害の単位時間に  | ,float] |              |
|                      | 発生する回数を格納した長さ  |         |              |
|                      | 2 の配列 = [L1 障害回       |         |              |
|                      |                             |         |              |
|                      | 数,L2 障害回数]             |         |              |
+----------------------+-----------------------------+---------+--------------+
| **N**                | 全計算ノード数              | int     | 必須         |
+----------------------+-----------------------------+---------+--------------+
| **SN**               | 予備ノード数                | int     | 必須         |
|                      | ※仕様追加されたパラメータ  |         |              |
+----------------------+-----------------------------+---------+--------------+
| **G**                | L1                          | int     | 必須         |
|                      | チェッ                      |         |              |
|                      | クポイントのグループサイズ  |         |              |
+----------------------+-----------------------------+---------+--------------+
| **g**                | L1                          | int     | 必須         |
|                      | チェックポイントの障害耐性  |         |              |
+----------------------+-----------------------------+---------+--------------+
| **alpha**            | シミュレーション終了とする  | float   | 必須         |
|                      | Efficiency の変化量の閾値   |         |              |
+----------------------+-----------------------------+---------+--------------+
| **check_interval**   | Efficiency                  | int     | 省略可       |
|                      | の変化量チェックの頻度      |         | 、Default=1  |
|                      | ※仕様追加されたパラメータ  |         |              |
+----------------------+-----------------------------+---------+--------------+
| **n_check_ok**       | Efficiency                  | int     | 省略可       |
|                      | の変化量チェ                |         | 、Default=1  |
|                      | ックで終了と判定されるため  |         |              |
|                      |                             |         |              |
|                      | の連続回数                  |         |              |
|                      | ※仕様追加されたパラメータ  |         |              |
+----------------------+-----------------------------+---------+--------------+
| **n_failure_max**    | 最大障害発生回数            | int     | 省略可、De   |
|                      | ※仕様追加されたパラメータ  |         | fault=500000 |
+----------------------+-----------------------------+---------+--------------+
| **n_steps**          | 最適化の反復回数            | int     | 省略可、     |
|                      | ※仕様追加されたパラメータ  |         | Default=5000 |
+----------------------+-----------------------------+---------+--------------+
| **log_interval**     | 最適化のログ出力間隔、0     | int     | 省略可、     |
|                      | とすると出力なし            |         | Default=100  |
|                      | ※仕様追加されたパラメータ  |         |              |
+----------------------+-----------------------------+---------+--------------+

・返り値（出力）：tuple 型データ=(X,A,B,C,D,E,F, interval, L2ckpt_freq)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

+-----------------+------------------------------------------------+--------+
| **引数名**      | **説明**                                       | **型** |
+=================+================================================+========+
| **X**           | 最適化結果の interval, L2ckpt_freq 時の        |  float |
|                 | Efficiency = A/(B+C+D+F)                       |        |
+-----------------+------------------------------------------------+--------+
| **A**           | 最適化結果の interval, L2ckpt_freq             |  float |
|                 | 時の実質計算時間                               |        |
+-----------------+------------------------------------------------+--------+
| **B**           | 最適化結果の interval, L2ckpt_freq             |  float |
|                 | 時の計算状態に費やした時間                     |        |
+-----------------+------------------------------------------------+--------+
| **C**           | 最適化結果の interval, L2ckpt_freq 時の L1     |  float |
|                 | チェックポイントに費やした時間                 |        |
+-----------------+------------------------------------------------+--------+
| **D**           | 最適化結果の interval, L2ckpt_freq 時の L1     |  float |
|                 | リカバリに費やした時間                         |        |
+-----------------+------------------------------------------------+--------+
| **E**           | 最適化結果の interval, L2ckpt_freq 時の L2     |  float |
|                 | チェックポイントに費やした時間                 |        |
+-----------------+------------------------------------------------+--------+
| **F**           | 最適化結果の interval, L2ckpt_freq 時の L2     |  float |
|                 | リカバリに費やした時間                         |        |
+-----------------+------------------------------------------------+--------+
| **interval**    | 最適化結果のL1 チェックポイントの間隔          |  int   |
+-----------------+------------------------------------------------+--------+
| **L2ckpt_freq** | 最適化結果のL2 チェックポイントの頻度          |  int   |
+-----------------+------------------------------------------------+--------+

-  .. rubric:: 最適化手法について
      :name: 最適化手法について

最適化手法には、焼きなまし法を採用しました。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

・初期状態
~~~~~~~~~~

下記のinterval、L2_freq_freq 組み合わせ（24 通り）の内、最も Efficiency の高いものを初期状態とするよう実装しました。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

interval = 1000, 2500, 5000, 8000, 12000, 24000
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

L2_freq_freq = 1, 2, 5, 10
~~~~~~~~~~~~~~~~~~~~~~~~~~

・状態遷移
~~~~~~~~~~

状態遷移については、下記の４つの方法を検討しました。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

方法 1：
~~~~~~~~

１．interval と L2ckpt_freq のどちらの数値を変えるかをランダムに選択２．選択されたパラメータを 2％増減
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

方法 2：
~~~~~~~~

１．interval と L2ckpt_freq のどちらの数値を変えるかをランダムに選択２．選択されたパラメータを 5％以内のランダムな値で増減
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

方法 3：
~~~~~~~~

１．interval と L2ckpt_freq の両方を 0～5％以内のランダムな値で増減
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

方法 4：
~~~~~~~~

１．interval と L2ckpt_freq のどちらの数値を変えるかをランダムに選択２．選択されたパラメータを固定値で増減
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

検討の結果、方法 4（※）以外は、どれもあまり差が見られなかったため、方法 1 を採用。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

※interval は範囲が広いため、固定値で増減する場合、小さい値にすると範囲内の移動に回数が掛かりすぎ、大きい値にすると小さい側で変化量が大きくなりすぎる問題が発生しました。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

上記の状態遷移の方法は、簡単なソースコード修正で、上記いずれの方法にも変更できるようにしていますの で、必要に応じて修正してご利用ください。また、2％や 5％の数字もソースコードの対応箇所の変更のみで変更可能です。
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CRSim Documentation

Table of Contents

`1
Overview <file:///J:\my_work_J\RIST\理研spark_開発ツールおよび実行支援ツールの富岳向けソフトウェア整備\CRSim_spack_recipe\documents_CRSim_en-US.docx#_Toc90394034>`__\ `2 <#summary>`__

`2 Development
Details <file:///J:\my_work_J\RIST\理研spark_開発ツールおよび実行支援ツールの富岳向けソフトウェア整備\CRSim_spack_recipe\documents_CRSim_en-US.docx#_Toc90394035>`__\ `2 <#development-details>`__

`2.1 simulate_cr
Function <file:///J:\my_work_J\RIST\理研spark_開発ツールおよび実行支援ツールの富岳向けソフトウェア整備\CRSim_spack_recipe\documents_CRSim_en-US.docx#_Toc90394036>`__\ `2 <#simulate_cr-function>`__

`2.2 optimize_cr
function <file:///J:\my_work_J\RIST\理研spark_開発ツールおよび実行支援ツールの富岳向けソフトウェア整備\CRSim_spack_recipe\documents_CRSim_en-US.docx#_Toc90394037>`__\ `4 <#optimize_cr-function>`__

summary
=======

(a) simulate_cr function:.
~~~~~~~~~~~~~~~~~~~~~~~~~~

Simulates multilevel C/R and outputs the results.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(b) optimize_cr function:.
~~~~~~~~~~~~~~~~~~~~~~~~~~

Find the interval and L2_freq that maximizes the efficiency of the simulate_cr function, and output the simulation results at that time.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2. .. rubric:: Development Details
      :name: development-details

   1. .. rubric:: simulate_cr function
         :name: simulate_cr-function

.. _tuple-simulate_crinterval-l2ckpt_freq-l1ckpt_overhead-l2ckpt_latency-ckptrestarttimes-failrates-n-sn-g-g-alpha-check_interval-n_check_ok-n_failure_max-efficiency_log-1:

tuple simulate_cr(interval, L2ckpt_freq, L1ckpt_overhead, L2ckpt_latency, ckptRestartTimes, failRates, N, SN, G, g, alpha, check_interval, n_check_ok, n_failure_max, efficiency_log)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Argument (Input)
~~~~~~~~~~~~~~~~

+----------------------+----------------------------+----------+---------------+
| **argument name**    | **Description.**           | **type** |               |
+======================+============================+==========+===============+
| **Interval**         | L1 Checkpoint interval     | int      | indispensable |
+----------------------+----------------------------+----------+---------------+
| **L2ckpt_frq**       | L2 Checkpoint Frequency    | int      | indispensable |
|                      |                            |          |               |
+----------------------+----------------------------+----------+---------------+
| **L1ckpt_overhead**  | Synchronization L1         | int      | indispensable |
|                      | Checkpoint time            |          |               |
+----------------------+----------------------------+----------+---------------+
| **L2ckpt_latency**   | Asynchronous L2 checkpoint | int      | indispensable |
|                      | time                       |          |               |
+----------------------+----------------------------+----------+---------------+
| **ckptRestartTimes** | Array of length 2          | List     | indispensable |
|                      | containing the time        |          |               |
|                      | required for L1,L2         | [int     |               |
|                      | recovery                   | ,int].   |               |
|                      |                            |          |               |
|                      | = [L1 recovery time,L2     |          |               |
|                      | recovery time].            |          |               |
+----------------------+----------------------------+----------+---------------+
| **failRates**        | Array of length 2          | List     | indispensable |
|                      | containing the number of   | [f       |               |
|                      | failures requiring L1,L2   | loat,f   |               |
|                      | recovery per unit time =   | loat].   |               |
|                      | [L1 failure times          |          |               |
|                      |                            |          |               |
|                      | Number,L2 Failure Count]   |          |               |
+----------------------+----------------------------+----------+---------------+
| **N**                | Total number of            | int      | indispensable |
|                      | computation nodes          |          |               |
+----------------------+----------------------------+----------+---------------+
| **SN**               | Number of spare nodes      | int      | indispensable |
|                      | \*Parameters added to the  |          |               |
|                      | specification              |          |               |
+----------------------+----------------------------+----------+---------------+
| **g**                | L1 Checkpoint group size   | int      | indispensable |
+----------------------+----------------------------+----------+---------------+
| **g**                | L1 Checkpoint Fault        | int      | indispensable |
|                      | Tolerance                  |          |               |
+----------------------+----------------------------+----------+---------------+
| **alpha**            | Threshold of change in     | float    | indispensable |
|                      | efficiency that terminates |          |               |
|                      | the simulation             |          |               |
|                      |                            |          |               |
|                      | value                      |          |               |
+----------------------+----------------------------+----------+---------------+
| **check_interval**   | Frequency of Efficiency    | int      | Optional,     |
|                      | change checks              |          | Default=1     |
|                      |                            |          |               |
|                      | Parameters added to the    |          |               |
|                      | specification              |          |               |
+----------------------+----------------------------+----------+---------------+
| **n_check_ok**       | Because it is judged to be | int      | Optional,     |
|                      | finished by the change     |          | Default=1     |
|                      | amount check of Efficiency |          |               |
|                      |                            |          |               |
|                      | Number of consecutive      |          |               |
|                      | times of \*Parameters      |          |               |
|                      | added to the specification |          |               |
+----------------------+----------------------------+----------+---------------+
| **n_failure_max**    | Maximum number of failures | int      | Optional,     |
|                      | \*Parameters added to the  |          | D             |
|                      | specification              |          | efault=500000 |
+----------------------+----------------------------+----------+---------------+
| **efficiency_log**   | Turn on/off the historical | bool     | Optional,     |
|                      | output of the Efficiency   |          | Default=False |
|                      | change check               |          |               |
|                      |                            |          |               |
|                      | Parameters added to the    |          |               |
|                      | specification              |          |               |
+----------------------+----------------------------+----------+---------------+

Return value (output): tuple type data = (X,A,B,C,D,E,F)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

+--------------+------------------------------------------+-----------+
| **argument   | **Description.**                         |           |
| name**       |                                          | **type**  |
+==============+==========================================+===========+
| **an         | Efficiency = A/(B+C+D+F)                 |    float  |
| unknown**    |                                          |           |
+--------------+------------------------------------------+-----------+
| **A**        | real computation time                    |    float  |
+--------------+------------------------------------------+-----------+
| **B**        | Time spent in the calculation state      |    float  |
+--------------+------------------------------------------+-----------+
| **c**        | L1 Time spent at checkpoint              |    float  |
+--------------+------------------------------------------+-----------+
| **D**        | L1 Time spent in recovery                |    float  |
+--------------+------------------------------------------+-----------+
| **E**        | L2 Time spent on checkpoints             |    float  |
+--------------+------------------------------------------+-----------+
| **f**        | Time spent on L2 recovery                |    float  |
+--------------+------------------------------------------+-----------+

optimize_cr function
--------------------

.. _tuple-optimize_cr-l1ckpt_overhead-l2ckpt_latency-ckptrestarttimes-failrates-n-sn-g-g-alpha-check_interval-n_check_ok-n_failure_max-n_steps-log_interval-1:

tuple optimize_cr (L1ckpt_overhead, L2ckpt_latency, ckptRestartTimes, failRates, N, SN, G, g, alpha, check_interval, n_check_ok, n_failure_max, n_steps, log_interval)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _argument-input-1:

Argument (Input)
~~~~~~~~~~~~~~~~

+----------------------+----------------------------+----------+---------------+
| **argument name**    | **Description.**           | **type** |               |
|                      |                            |          |               |
+======================+============================+==========+===============+
| **L1ckpt_overhead**  | Synchronization L1         | int      | indispensable |
|                      | Checkpoint time            |          |               |
+----------------------+----------------------------+----------+---------------+
| **L2ckkpt_latency**  | Asynchronous L2 checkpoint | int      | indispensable |
|                      | time                       |          |               |
+----------------------+----------------------------+----------+---------------+
| **ckptRestartTimes** | Array of length 2          | List     | indispensable |
|                      | containing the time        |          |               |
|                      | required for L1,L2         | [int     |               |
|                      | recovery                   | ,int].   |               |
|                      |                            |          |               |
|                      | = [L1 recovery time,L2     |          |               |
|                      | recovery time].            |          |               |
+----------------------+----------------------------+----------+---------------+
| **failRates**        | Array of length 2          | List     | indispensable |
|                      | containing the number of   | [f       |               |
|                      | failures requiring L1,L2   | loat,f   |               |
|                      | recovery per unit time =   | loat].   |               |
|                      | [L1 failure times          |          |               |
|                      |                            |          |               |
|                      | Number,L2 Failure Count]   |          |               |
+----------------------+----------------------------+----------+---------------+
| **N**                | Total number of            | int      | indispensable |
|                      | computation nodes          |          |               |
+----------------------+----------------------------+----------+---------------+
| **SN**               | Number of spare nodes      | int      | indispensable |
|                      | \*Parameters added to the  |          |               |
|                      | specification              |          |               |
+----------------------+----------------------------+----------+---------------+
| **g**                | L1 Checkpoint group size   | int      | indispensable |
+----------------------+----------------------------+----------+---------------+
| **g**                | L1 Checkpoint Fault        | int      | indispensable |
|                      | Tolerance                  |          |               |
+----------------------+----------------------------+----------+---------------+
| **alpha**            | Threshold of change in     | float    | indispensable |
|                      | efficiency that terminates |          |               |
|                      | the simulation             |          |               |
|                      |                            |          |               |
|                      | value                      |          |               |
+----------------------+----------------------------+----------+---------------+
| **check_interval**   | Frequency of Efficiency    | int      | Optional,     |
|                      | change checks              |          | Default=1     |
|                      |                            |          |               |
|                      | Parameters added to the    |          |               |
|                      | specification              |          |               |
+----------------------+----------------------------+----------+---------------+
| **n_check_ok**       | Because it is judged to be | int      | Optional,     |
|                      | finished by the change     |          | Default=1     |
|                      | amount check of Efficiency |          |               |
|                      |                            |          |               |
|                      | Number of consecutive      |          |               |
|                      | times of \*Parameters      |          |               |
|                      | added to the specification |          |               |
+----------------------+----------------------------+----------+---------------+
| **n_failure_max**    | Maximum number of failures | int      | Optional,     |
|                      | \*Parameters added to the  |          | D             |
|                      | specification              |          | efault=500000 |
+----------------------+----------------------------+----------+---------------+
| **n_steps**          | Number of optimization     | int      | Optional,     |
|                      | iterations \*Parameters    |          | Default=5000  |
|                      | added to specification     |          |               |
+----------------------+----------------------------+----------+---------------+
| **log_interval**     | Log output interval for    | int      | Optional,     |
|                      | optimization, 0 means no   |          | Default=100   |
|                      | output                     |          |               |
|                      |                            |          |               |
|                      | Parameters added to the    |          |               |
|                      | specification              |          |               |
+----------------------+----------------------------+----------+---------------+

Return value (output): tuple type data=(X,A,B,C,D,E,F, interval, L2ckpt_freq)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

+-----------+-------------------------------------------------+---------+
| **argument| **Description.**                                | **type**|
| name**    |                                                 |         |
+===========+=================================================+=========+
| **an      | Efficiency = A/(B+C+D+F) at interval,           |         |
| unknown** | L2ckpt_freq of optimization results             | float   |
+-----------+-------------------------------------------------+---------+
| **A**     | interval of optimization results, real          |         |
|           | computation time at L2ckpt_freq                 | float   |
+-----------+-------------------------------------------------+---------+
| **B**     | interval of optimization results, time spent in |         |
|           | the computation state at L2ckpt_freq            | float   |
+-----------+-------------------------------------------------+---------+
| **C**     | interval of optimization results, time spent on |         |
|           | L1 checkpoint at L2ckpt_freq                    | float   |
+-----------+-------------------------------------------------+---------+
| **D**     | interval of optimization results, time spent    |         |
|           | for L1 recovery at L2ckpt_freq                  | float   |
+-----------+-------------------------------------------------+---------+
| **E**     | interval of optimization results, time spent on |         |
|           | L2 checkpoints during L2ckpt_freq               | float   |
+-----------+-------------------------------------------------+---------+
| **f**     | interval of optimization results, time spent    |         |
|           | for L2 recovery at L2ckpt_freq                  | float   |
+-----------+-------------------------------------------------+---------+
| **        | L1 checkpoint interval for optimization results |         |
| interval**|                                                 |   int   |
+-----------+-------------------------------------------------+---------+
| **L2ck    | Frequency of L2 checkpoints for optimization    |         |
| pt_freq** | results                                         |   int   |
+-----------+-------------------------------------------------+---------+

-  .. rubric:: Optimization Methodology
      :name: optimization-methodology

An annealing method was used as the optimization technique.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Initial state
~~~~~~~~~~~~~

Of the following combinations of interval and L2_freq_freq (24 combinations), the one with the highest efficiency is implemented as the initial state.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _interval-1000-2500-5000-8000-12000-24000-1:

interval = 1000, 2500, 5000, 8000, 12000, 24000
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _l2_freq_freq-1-2-5-10-1:

L2_freq_freq = 1, 2, 5, 10
~~~~~~~~~~~~~~~~~~~~~~~~~~

State Transition
~~~~~~~~~~~~~~~~

The following four methods were considered for state transitions.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Method 1.
~~~~~~~~~

1. randomly select which value of interval or L2ckpt_freq to change 2. increase/decrease the selected parameter by 2%.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Method 2.
~~~~~~~~~

1. randomly select which value of interval or L2ckpt_freq to change 2. increase or decrease the selected parameter by a random value within 5%.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Method 3
~~~~~~~~

1. increase/decrease both interval and L2ckpt_freq by a random value within 0-5%.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Method 4
~~~~~~~~

1. randomly select which value of interval or L2ckpt_freq to change 2. increase/decrease the selected parameter by a fixed value
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

As a result of the study, Method 1 was adopted because none of the methods showed much difference except for Method 4 (*).
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Because the interval has a wide range, when increasing or decreasing it by a fixed value, a small value causes too many times to move within the range, while a large value causes too large a change on the small side.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The above state transition methods can be changed to any of the above methods with a simple source code modification. The 2% and 5% numbers can also be changed only by modifying the corresponding parts of the source code.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
